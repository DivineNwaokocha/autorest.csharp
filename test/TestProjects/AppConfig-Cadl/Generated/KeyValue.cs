// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace AppConfiguration
{
    /// <summary> // TODO: (missing-description) Add description. </summary>
    public partial class KeyValue
    {
        /// <summary> Initializes a new instance of KeyValue. </summary>
        /// <param name="key"></param>
        /// <param name="label"></param>
        /// <param name="contentType"></param>
        /// <param name="value"></param>
        /// <param name="lastModified"></param>
        /// <param name="tags"></param>
        /// <param name="locked"></param>
        /// <param name="etag"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="key"/>, <paramref name="label"/>, <paramref name="contentType"/>, <paramref name="value"/>, <paramref name="tags"/> or <paramref name="etag"/> is null. </exception>
        public KeyValue(string key, string label, string contentType, string value, DateTimeOffset lastModified, IDictionary<string, string> tags, bool locked, string etag)
        {
            Argument.AssertNotNull(key, nameof(key));
            Argument.AssertNotNull(label, nameof(label));
            Argument.AssertNotNull(contentType, nameof(contentType));
            Argument.AssertNotNull(value, nameof(value));
            Argument.AssertNotNull(tags, nameof(tags));
            Argument.AssertNotNull(etag, nameof(etag));

            Key = key;
            Label = label;
            Content_type = contentType;
            Value = value;
            Last_modified = lastModified;
            Tags = tags;
            Locked = locked;
            Etag = etag;
        }

        public string Key { get; set; }

        public string Label { get; set; }

        public string Content_type { get; set; }

        public string Value { get; set; }

        public DateTimeOffset Last_modified { get; set; }

        public IDictionary<string, string> Tags { get; }

        public bool Locked { get; set; }

        public string Etag { get; set; }
    }
}
