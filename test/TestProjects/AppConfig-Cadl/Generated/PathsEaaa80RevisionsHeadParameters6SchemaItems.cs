// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace
{
    /// <summary> // TODO: (missing-description) Add description. </summary>
    public readonly partial struct PathsEaaa80RevisionsHeadParameters6SchemaItems : IEquatable<global::.PathsEaaa80RevisionsHeadParameters6SchemaItems>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="PathsEaaa80RevisionsHeadParameters6SchemaItems"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public PathsEaaa80RevisionsHeadParameters6SchemaItems(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string KeyValue = "key";
        private const string LabelValue = "label";
        private const string ContentTypeValue = "content_type";
        private const string ValueValue = "value";
        private const string LastModifiedValue = "last_modified";
        private const string TagsValue = "tags";
        private const string LockedValue = "locked";
        private const string EtagValue = "etag";

        /// <summary> key. </summary>
        public static global::.PathsEaaa80RevisionsHeadParameters6SchemaItems Key { get; } = new global::.PathsEaaa80RevisionsHeadParameters6SchemaItems(KeyValue);
        /// <summary> label. </summary>
        public static global::.PathsEaaa80RevisionsHeadParameters6SchemaItems Label { get; } = new global::.PathsEaaa80RevisionsHeadParameters6SchemaItems(LabelValue);
        /// <summary> content_type. </summary>
        public static global::.PathsEaaa80RevisionsHeadParameters6SchemaItems ContentType { get; } = new global::.PathsEaaa80RevisionsHeadParameters6SchemaItems(ContentTypeValue);
        /// <summary> value. </summary>
        public static global::.PathsEaaa80RevisionsHeadParameters6SchemaItems Value { get; } = new global::.PathsEaaa80RevisionsHeadParameters6SchemaItems(ValueValue);
        /// <summary> last_modified. </summary>
        public static global::.PathsEaaa80RevisionsHeadParameters6SchemaItems LastModified { get; } = new global::.PathsEaaa80RevisionsHeadParameters6SchemaItems(LastModifiedValue);
        /// <summary> tags. </summary>
        public static global::.PathsEaaa80RevisionsHeadParameters6SchemaItems Tags { get; } = new global::.PathsEaaa80RevisionsHeadParameters6SchemaItems(TagsValue);
        /// <summary> locked. </summary>
        public static global::.PathsEaaa80RevisionsHeadParameters6SchemaItems Locked { get; } = new global::.PathsEaaa80RevisionsHeadParameters6SchemaItems(LockedValue);
        /// <summary> etag. </summary>
        public static global::.PathsEaaa80RevisionsHeadParameters6SchemaItems Etag { get; } = new global::.PathsEaaa80RevisionsHeadParameters6SchemaItems(EtagValue);
        /// <summary> Determines if two <see cref="PathsEaaa80RevisionsHeadParameters6SchemaItems"/> values are the same. </summary>
        public static bool operator ==(global::.PathsEaaa80RevisionsHeadParameters6SchemaItems left, global::.PathsEaaa80RevisionsHeadParameters6SchemaItems right) => left.Equals(right);
        /// <summary> Determines if two <see cref="PathsEaaa80RevisionsHeadParameters6SchemaItems"/> values are not the same. </summary>
        public static bool operator !=(global::.PathsEaaa80RevisionsHeadParameters6SchemaItems left, global::.PathsEaaa80RevisionsHeadParameters6SchemaItems right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="PathsEaaa80RevisionsHeadParameters6SchemaItems"/>. </summary>
        public static implicit operator global::.PathsEaaa80RevisionsHeadParameters6SchemaItems(string value) => new global::.PathsEaaa80RevisionsHeadParameters6SchemaItems(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is global::.PathsEaaa80RevisionsHeadParameters6SchemaItems other && Equals(other);
        /// <inheritdoc />
        public bool Equals(global::.PathsEaaa80RevisionsHeadParameters6SchemaItems other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
